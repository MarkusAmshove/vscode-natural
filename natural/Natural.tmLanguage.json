{
  "scopeName": "source.natural",
  "patterns": [
    { "include": "#define-subroutine"},
    { "include": "#keyword" },
    { "include": "#string-literal-double" },
    { "include": "#string-literal-single" },
    { "include": "#hex-literal" },
    { "include": "#system-vars" },
    { "include": "#inline-comment"},
    { "include": "#perform-subroutine"},
    { "include": "#line-comment"}
  ],
  "repository": {
    "string-literal-double": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.natural"
    },
    "string-literal-single": {
      "begin": "'",
      "end": "'",
      "name": "string.quoted.single.natural"
    },
    "hex-literal": {
      "begin": "H'",
      "end": "'",
      "name": "constant.numeric.natural"
    },
    "keyword": {
      "name": "keyword.natural",
      "match": "(?i)\\b(?<!-)(?<!#)(entire|by|name|array|specified|view|variable|function|type|returns|and|numeric|optional|work|file|end-parse|true|end-result|leaving|not|condition|number|no|exp|full|replace|insert|doend|log|abs|any|repeat|set|dlogoff|download|break|values|divide|compress|update|sortkey|or|end-find|end-endpage|reduce|ignore|min|waste|end-define|end-function|substr|end|find|add|investigate|dnative|const|cos|endhoc|sgn|copy|redefine|define|multiply|assign|le|value|compose|false|pos|call|tan|error|close|parse|lt|with_cte|end-sort|eject|reset|show|local|terminate|val|backout|end-loop|reject|sum|create|sort|return|at|sin|settime|int|ne|global|end-select|else|delete|top|include|end-enddata|loop|old|suspend|skip|sqrt|rulevar|nmin|aver|process|select|map|using|end-histogram|max|newpage|on|off|key|named|control|pf1|pf2|pf3|pf4|pf5|pf6|pf7|pf8|pf9|initial|write|store|fetch|atn|ret|end-work|restore|get|limit|end-error|send|open|escape|compute|count|transfer|release|do|dynamic|rollback|end-read|display|upload|end-data|null-handle|ncount|resize|end-process|request|read|separate|eq|input|data|end-start|stack|reinput|incdic|inccont|end-if|when|end-before|while|end-endfile|end-toppage|incdir|parameter|obtain|calldbproc|end-browse|move|module|modified|subtract|dlogon|examine|substring|before|stop|run|end-break|export|end-subroutine|for|ge|print|browse|import|expand|all|passw|format|gt|end-norec|end-decide|end-for|callnat|end-all|options|retry|none|incmac|end-file|decide|init|histogram|naver|start|accept|commit|total|if|frac|end-repeat|until|to|into|with|delimiter|first|of|into|subroutine|giving|position)\\b(?!-)"
    },
    "system-vars": {
      "name": "entity.name.function.natural",
      "match": "(?i)\\*(applic-id|applic-name|browser-io|codepage|com|control|convid|counter|cpu-time|current-unit|curs-col|curs-field|curs-line|cursor|datd|dat4d|date|dat4e|datg|dati|dat4i|datj|dat4j|datn|datu|dat4u|datv|datvs|datx|data|device|dialog-id|editor|error-line|error-nr|error-ta|etid|event|group|hardcopy|hardware|hostname|init-id|init-program|init-user|isn|language|lbound|length|level|library-id|line-count|linesize|line|linex|load-library-id|locale|log-ls|log-ps|machine-class|natvers|net-user|number|occurrence|opsys|os|osvers|page-event|page-level|page-number|pagesize|parm-user|parse-col|parse-level|parse-namespace-uri|parse-row|parse-type|patch-level|pf-key|pf-name|pid|program|reinput-type|rowcount|screen-io|server-type|startup|steplib|subroutine|this-object|timd|time|time-out|timestmp|timn|timx|tpsys|tp|tpvers|type|ubound|ui|user-name|user|window-ls|window-pos|window-ps|winmgr|winmgrvers)"
    },
    "inline-comment": {
      "name": "comment.block.natural",
      "begin": "/\\*(?!\\)|:)",
      "end": "$"
    },
    "line-comment": {
      "name": "comment.line.natural",
      "begin": "^\\*\\s",
      "end": "$"
    },
    "define-subroutine": {
      "name": "define.subroutine.natural",
      "match": "(?i)\\b(define)\\s+(subroutine)\\s+([a-z0-9\\-]+)",
      "captures": {
        "1": {
          "name": "keyword.natural"
        },
        "2": {
          "name": "keyword.natural"
        },
        "3": {
          "name": "entity.name.function.natural"
        }
      }
    },
    "perform-subroutine": {
      "name": "perform.subroutine.natural",
      "match": "(?i)\\b(perform)\\s+([a-z0-9\\-]+)",
      "captures": {
        "1": {
          "name": "keyword.natural"
        },
        "2": {
          "name": "entity.name.function.natural"
        }
      }
    }
  }
}
